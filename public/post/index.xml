<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ZachBlog</title>
    <link>https://www.bayesfame.xyz/post/</link>
    <description>Recent content in Posts on ZachBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ch</language>
    <copyright>Copyright © 2008–2019, Steve Francia and the lee.so; all rights reserved.</copyright>
    <lastBuildDate>Fri, 10 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.bayesfame.xyz/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>详解nostr：nip-16</title>
      <link>https://www.bayesfame.xyz/post/nip-16/</link>
      <pubDate>Fri, 10 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-16/</guid>
      <description>NIP-16 事件处理 中继器可以允许替换或者短暂类型的事件
常规的事件 常规事件是通过kind定义在1000到10000以内的。当接收到常规的事件时，中继器应该将它发送给所有满足订阅过滤条件的客户端，并且中继器需要存储该事件。
可替换的事件 可替换的事件kind定义在10000到20000之间，当一个可替换事件的时间戳比当前已知的最新可替换事件的时间戳更新，并且接收到了相同类型的可替换事件，并且使用相同的密钥签名时，旧的事件应该被丢弃，并用新的事件替换。
短暂的事件 短暂的事件定义的kind在20000到30000指尖，当接收到短暂的事件消息后，中继器应该将该事件发送给全部满足过滤条件的客户端，并且不应该进行存储。
客户端行为 客户端应该使用 support _nips 字段来了解中继是否支持这个 NIP。客户端不应该向不支持此 NIP 的中继器发送短暂事件; 它们很可能被持久化。客户端可能会发送可替换的事件到继电器，可能不支持这个 NIP，客户端查询应该准备中继器发送多个事件，应该使用最新的一个。
建议的用例  状态: 应用程序可以创建一个状态事件，每次设置一个新状态(比如状态)时将替换该事件 类型指示器: 聊天应用程序可以使用临时事件作为类型指示器。 消息传递: 两个 pubkey 可以使用临时事件通过 nostr 传递消息。  </description>
    </item>
    
    <item>
      <title>详解nostr：nip-14&amp;15</title>
      <link>https://www.bayesfame.xyz/post/nip-1415/</link>
      <pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-1415/</guid>
      <description>NIP-14 文本事件中的主题标记 此NIP定义了文本类型事件中主题标签的用法
浏览器通常展示列表的消息，每个内容的主题标签可以在这样的列表中被应用，而不是使用消息的前几个单词的方法。这个和网页邮箱客户端展示新来邮件的主题而不是内容的方式很相似。
当回复一个带有主题的消息时，客户端应该复制此主题标签。客户可以在标题前加上“ Re:”来表示是回复。
主题一般应短于80字符。长主题可能会被客户端截断。
NIP-15 发送事件完毕通知 中继器应该支持在发送本地存储的全部事件后向客户端发送通知
支持此NIP的中继器在发送完本地存储的全部事件后应该向客户端发送EOSE消息，格式是[&amp;quot;EOSE&amp;quot;, &amp;lt;subscription_id&amp;gt;]
客户端行为 客户端应该使用 support _nips 字段来了解中继器是否支持存储事件通知的结束
提议动机 这个提议的动机是为了减少不确定性，当所有事件都通过中继发送，使客户端代码可能不那么复杂。</description>
    </item>
    
    <item>
      <title>详解nostr：nip-13</title>
      <link>https://www.bayesfame.xyz/post/nip-13/</link>
      <pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-13/</guid>
      <description>NIP-13 工作量证明 本nip定义了一种为nostr笔记生成和验证工作量证明的方法。工作证明(Proof Work，PoW)是将计算工作证明添加到笔记中的一种方法。这是一个承载者证明，所有中继器和客户端都可以通过少量代码进行普遍验证。这个证据可以作为阻止垃圾邮件的一种手段。
挖矿 如果要为NIP-01的笔记生成POW，需要加上nonce tag {&amp;quot;content&amp;quot;: &amp;quot;It&#39;s just me mining my own business&amp;quot;, &amp;quot;tags&amp;quot;: [[&amp;quot;nonce&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;20&amp;quot;]]} 当进行挖矿时，nonce标记的第二个条目会被更改，并且id会被重新计算，如果id包含了足够的前导零，那么这个笔记就被挖矿成功，建议在此过程中同步更新created_at
nonce中的第三个对象是挖矿的难度。这使得客户端可以防止大量垃圾邮件发送者针对较低难度的POW证明，例如你要求回复帖子的内容需要目标前导零个数为30，即使回复拥有40bits的难度，你也可以拒绝。没有一个确定的目标难度，你不能拒绝它。
挖矿示例的帖子 { &amp;#34;id&amp;#34;: &amp;#34;000006d8c378af1779d2feebc7603a125d99eca0ccf1085959b307f64e5dd358&amp;#34;, &amp;#34;pubkey&amp;#34;: &amp;#34;a48380f4cfcc1ad5378294fcac36439770f9c878dd880ffa94bb74ea54a6f243&amp;#34;, &amp;#34;created_at&amp;#34;: 1651794653, &amp;#34;kind&amp;#34;: 1, &amp;#34;tags&amp;#34;: [ [ &amp;#34;nonce&amp;#34;, &amp;#34;776797&amp;#34;, &amp;#34;20&amp;#34; ] ], &amp;#34;content&amp;#34;: &amp;#34;It&amp;#39;s just me mining my own business&amp;#34;, &amp;#34;sig&amp;#34;: &amp;#34;284622fc0a3f4f1303455d5175f7ba962a3300d136085b9566801bc2e0699de0c7e31e44c81fb40ad9049173742e904713c3594a1da0fc5d2382a25c11aba977&amp;#34; } </description>
    </item>
    
    <item>
      <title>详解nostr：nip-12</title>
      <link>https://www.bayesfame.xyz/post/nip-12/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-12/</guid>
      <description>NIP-12 通用的标签查询 中继器应该支持根据标签订阅，NIP-01要求中继器对于查询请求发送带有e 和p标签的响应。此 NIP 允许查询事件中出现的任何单字母标记。
NIP-01中描述的 &amp;lt;filters&amp;gt; 对象被扩展为包含带有 # 前缀的任意键。任何带有#前缀的都是标签查询，并且必须携带字符串数组。如果事件带有此标签，并且事件中至少有一个标签和查询中的符合，则满足查询条件。标签名就是#后的字母，并且标签值是第二个元素。为了进行标记查询，将忽略后续元素。
订阅筛选示例 下面提供了一个过滤器示例，该过滤器将类型1的事件与设置为 foo 或 bar 的 r 标记匹配。
{ &amp;quot;kinds&amp;quot;: [1], &amp;quot;#r&amp;quot;: [&amp;quot;foo&amp;quot;, &amp;quot;bar&amp;quot;] } 客户端行为 客户端应该使用 support_nips 字段来了解中继是否支持通用标记查询。客户可以向任何中继发送通用标签查询，如果他们准备过滤掉来自不支持此 NIP 的中继的无关响应。
基本原理 在查询中只保留可用的单字母标记，可以允许应用程序为所有类型的元数据使用标签过滤，这是主要目的，而不用担心它们可能会使得中继器的索引逐渐膨胀。 当然，这也使得中继器变得更轻，如果一些应用程序或用户滥用单字母标签，中继器可以更容易检测出来，因为单字母标签将很难与一些实际上有意义的元数据混淆，一些应用程序真的想附加到事件没有垃圾邮件的意图。
建议用例 下面提供了通用标记查询的有启发性的示例。本 NIP 不提倡或标准化任何特定标签的使用。
 去中心化评论系统: 客户端可以对任意网页进行评论，并通过使用 r (“ reference”，在本例中为 URL)标记和值轻松搜索其他评论。 特定位置的 Posts: 客户端可以使用 g (“ Geohash”)标记将一篇文章与一个物理位置关联起来。客户端可以搜索其附近不同精度的一组地理哈希来查找本地内容。 Hashtag: 客户端可以使用简单的 t (“ hashtag”)标签将事件与一个易于搜索的主题名相关联。由于 Nostr 事件本身不能通过协议进行搜索，因此这为用户驱动的搜索提供了一种机制。  </description>
    </item>
    
    <item>
      <title>详解nostr：nip-10</title>
      <link>https://www.bayesfame.xyz/post/nip-10/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-10/</guid>
      <description>NIP-10 文本事件中的e和p标签 摘要 这个 NIP 描述了如何在文本事件中使用“ e”和“ p”标记，特别是那些对其他文本事件的响应。它帮助客户端将答复线程化到以原始事件为根的树状结构中。
&amp;quot;e&amp;quot;标签 [&amp;quot;e&amp;quot;, &amp;lt;event-id&amp;gt;, &amp;lt;relay-url&amp;gt;, &amp;lt;marker&amp;gt;]
 &amp;lt;event-id&amp;gt;是事件被引用的ID &amp;lt;relay-url&amp;gt;是与引用的事件关联的中继器，客户端应该添加一个&amp;lt;relay-url&amp;gt;选项，但是默认应该为&amp;quot;&amp;quot; &amp;lt;marker&amp;gt;是可选项，如果出现应该是&amp;quot;reply&amp;quot;, &amp;quot;root&amp;quot;, or &amp;quot;mention&amp;quot;其中之一  &amp;ldquo;e&amp;quot;标签的内容顺序没有特定关系，被标记为&amp;quot;reply&amp;quot;指的是回复的事件。被标记为&amp;quot;root&amp;quot;的指向的是被回复的根事件。对于最顶层的事件，只应该标记&amp;quot;root&amp;quot;。被标记为&amp;quot;mention&amp;quot;指的是被引用或转发的事件ID。
直接回复根事件的应该只有一个&amp;quot;e&amp;quot;标签，类型为&amp;quot;root&amp;quot;
 这个方案是首选的，因为它允许事件提到其他事件，而不会将它们与 &amp;lt; response-id &amp;gt; 或 &amp;lt; root-id &amp;gt; 混淆。
 &amp;quot;p&amp;quot;标签 在文本事件中使用的命令包含用于记录所涉及的用户的 pubkey 列表。
当回复一个文本事件 E 时，回复事件的“ p”标签应该包含 E 的所有“ p”标签以及被回复事件的“ pubkey”。
示例: 给定一个由 a1创建的带有“ p”标记[ p1，p2，p3]的文本事件，那么回复的“ p”标记应该是[ a1，p1，p2，p3] ，没有特定的顺序。</description>
    </item>
    
    <item>
      <title>详解nostr：nip-11</title>
      <link>https://www.bayesfame.xyz/post/nip-11/</link>
      <pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-11/</guid>
      <description>NIP-11 中继器信息文档 中继器可以向客户端提供服务器元数据，以通知它们功能、管理联系人和各种服务器属性。这是通过 HTTP 作为 JSON 文档提供的，在与中继器的 websocket 相同的 URI 上。
当一个中继器接收到一个 HTTP 请求，其中包含了一个支持 WebSocket 升级的 URI 的 application/nostr+json 的 Accept 头，中继应该返回一个具有以下结构的文档。
{ &amp;quot;name&amp;quot;: &amp;lt;string identifying relay&amp;gt;, &amp;quot;description&amp;quot;: &amp;lt;string with detailed information&amp;gt;, &amp;quot;pubkey&amp;quot;: &amp;lt;administrative contact pubkey&amp;gt;, &amp;quot;contact&amp;quot;: &amp;lt;administrative alternate contact&amp;gt;, &amp;quot;supported_nips&amp;quot;: &amp;lt;a list of NIP numbers supported by the relay&amp;gt;, &amp;quot;software&amp;quot;: &amp;lt;string identifying relay software URL&amp;gt;, &amp;quot;version&amp;quot;: &amp;lt;string version identifier&amp;gt; } 任何字段都可能被忽略，客户端必须忽略任何他们不理解的额外字段。中继器必须通过发送Access-Control-Allow-Origin, Access-Control-Allow-Headers, 和 Access-Control-Allow-Methods 来接受 CORS 请求
字段解释 Name 中继器可以选择一个用于客户端软件的名称。这是一个字符串，应该小于30个字符，以避免客户端截断。</description>
    </item>
    
    <item>
      <title>详解nostr：nip-09</title>
      <link>https://www.bayesfame.xyz/post/nip-09/</link>
      <pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-09/</guid>
      <description>NIP-09 删除事件 类型为5的特殊事件含义是删除，带有一个或多个带有e标签的数组，每一个对应到待删除的事件
每一个事件必须包含标签e指向待删除的事件ID
事件的content字段可能包含删除事件的原因：
{ &amp;quot;kind&amp;quot;: 5, &amp;quot;pubkey&amp;quot;: &amp;lt;32-bytes hex-encoded public key of the event creator&amp;gt;, &amp;quot;tags&amp;quot;: [ [&amp;quot;e&amp;quot;, &amp;quot;dcd59..464a2&amp;quot;], [&amp;quot;e&amp;quot;, &amp;quot;968c5..ad7a4&amp;quot;], ], &amp;quot;content&amp;quot;: &amp;quot;these posts were published by accident&amp;quot;, ...other fields } 中继器应该删除并停止发布任何提及到相同ID的事件，客户端应该隐藏或者对已删除的事件标识删除的状态。
中继器应该继续发布/共享删除事件，因为客户端可能已经有事件打算删除。此外，客户端应该广播删除事件到其他未接受到此事件的中继器。
客户端的使用 客户端可以选择完全隐藏由有效删除事件引用的任何事件，这些包括文本，私信或者其他的还没有被定义的事件类型。此外，它们可以显示事件以及一个图标或其他表明作者已经“不拥有”该事件。 content字段可以被替代为删除事件的内容，用户界面可以清晰的看出来这是一个删除事件的原因，并不是原始的内容。
客户端应该在隐藏或者删除任何事件之前，校验每一个在e标签中提及的pubkey是否与删除事件的pubkey。
客户端以他们选择的任何方式显示删除事件本身，例如，根本不显示，或者显示一个显著的通知。
中继器的使用 中继器可以验证删除事件只引用与删除本身具有相同 pubkey 的事件，但是这并不是必需的，因为中继器可能不知道所有引用的事件。
取消删除事件 针对删除发布删除事件没有效果。客户端和中继器没有义务支持“取消删除”功能。</description>
    </item>
    
    <item>
      <title>详解nostr：nip-06 &amp; nip-07 &amp; nip-08</title>
      <link>https://www.bayesfame.xyz/post/nip-060708/</link>
      <pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-060708/</guid>
      <description>NIP-06 BIP39是用来生成助记词并将其转换为二进制种子 BIP32HD钱包相关BIP，这里不做拓展
这是基本的、通用的、单一键的客户端默认值 其他类型的客户机仍然可以为自己的其他目的使用其他派生路径。
NIP-07 适配浏览器的window.nostr window.nostr可以通过网络浏览器或扩展程序使用，网站或 web 应用程序可以在检查其可用性后使用它。 该对象必须定义以下方法:
async window.nostr.getPublicKey(): string // returns a public key as hex async window.nostr.signEvent(event: Event): Event // takes an event object, adds `id`, `pubkey` and `sig` and returns it 除上述两项基本功能外，以下功能亦可选择性地实施:
async window.nostr.getRelays(): { [url: string]: {read: boolean, write: boolean} } // returns a basic map of relay urls to relay policies async window.nostr.nip04.encrypt(pubkey, plaintext): string // returns ciphertext and iv as specified in nip-04 async window.</description>
    </item>
    
    <item>
      <title>详解nostr：nip-05</title>
      <link>https://www.bayesfame.xyz/post/nip-05/</link>
      <pubDate>Fri, 24 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-05/</guid>
      <description>NIP-05 将Nostr密钥映射到基于 DNS 的互联网标识符 在事件类型 set_metadata中，用户可以设置一个互联网标识符（像邮箱一样的地址）作为nip05的值
尽管这里指向互联网标识符的链接非常自由，但NIP-05设定&amp;lt;local-part&amp;gt;部分被限制在字符a-z0-9-_.中
客户端会将标识符分为&amp;lt;local-part&amp;gt; 和 &amp;lt;domain&amp;gt;两部分，并且使用这些值去构造一个GET请求，目标地址为：https://&amp;lt;domain&amp;gt;/.well-known/nostr.json?name=&amp;lt;local-part&amp;gt;
请求的响应值应该是带有names键的json对象，names键应该是一个从用户名到16进制字符串的映射，如果names中对应的公钥和set_metadata事件中的公钥一致，那么客户端会认为给定的公钥确实可以由其标识符引用
示例 客户端接收到如下格式的事件：
{ &amp;quot;pubkey&amp;quot;: &amp;quot;b0635d6a9851d3aed0cd6c495b282167acf761729078d975fc341b22650b07b9&amp;quot;, &amp;quot;kind&amp;quot;: 0, &amp;quot;content&amp;quot;: &amp;quot;{\&amp;quot;name\&amp;quot;: \&amp;quot;bob\&amp;quot;, \&amp;quot;nip05\&amp;quot;: \&amp;quot;bob@example.com\&amp;quot;}&amp;quot; ... } 客户端将会向https://example.com/.well-known/nostr.json?name=bob 发送GET请求，并且收到的响应值结果应该是：
{ &amp;quot;names&amp;quot;: { &amp;quot;bob&amp;quot;: &amp;quot;b0635d6a9851d3aed0cd6c495b282167acf761729078d975fc341b22650b07b9&amp;quot; } } 或者是带有可选的relays属性：
{ &amp;quot;names&amp;quot;: { &amp;quot;bob&amp;quot;: &amp;quot;b0635d6a9851d3aed0cd6c495b282167acf761729078d975fc341b22650b07b9&amp;quot; }, &amp;quot;relays&amp;quot;: { &amp;quot;b0635d6a9851d3aed0cd6c495b282167acf761729078d975fc341b22650b07b9&amp;quot;: [ &amp;quot;wss://relay.example.com&amp;quot;, &amp;quot;wss://relay2.example.com&amp;quot; ] } } 通过NIP-05标识符找到用户 客户端可以实现从互联网标识符中查找用户的公钥，流程与上面一样，但是相反: 首先客户端获取已知的 URL，然后从那里获取用户的公钥，然后它尝试为该用户获取类型为0的事件，并检查它是否有一个匹配的“ nip05”。
备注 客户端必须始终遵循公钥，而不是 NIP-05地址 例如，在发现bob@bob.com有公钥abc...def后，用户点击按钮进行关注，客户端必须保持对abc...def的追踪而不是bob@bob.com。如果出于任何原因，地址https://bob.com/.well-known/nostr.json?name=bob在未来的某个时刻所对应的公钥变为1d2...e3f，客户端不应该在用户的关注列表中替换公钥abc...def（但是应该停止展示bob@bob.com，因为它变成了无效的nip05属性）
公钥必须是16进制格式 公钥必须以十六进制格式返回。NIP-19 npub 格式的密钥只能用于在客户端 UI 中显示，而不能在此 NIP 中显示。
支持用户搜索 客户端应该允许用户去搜索他人的主页，如果客户端有一个搜索框，用户可能会输入bob@example.com ，并且客户端会识别并发送请求获取他的公钥返回给用户</description>
    </item>
    
    <item>
      <title>详解nostr：nip-04</title>
      <link>https://www.bayesfame.xyz/post/nip-04/</link>
      <pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-04/</guid>
      <description>NIP-04 加密的私信 事件类型为4的含义是“加密的私信”，它应该有以下特质： content内容：用户将想要发送的内容通过将收件人的公开密钥与发件人的私人密钥相结合而生成的共享密码，基于aes-256-cbc加密算法进行加密，再经过base64编码生成的。这是由 base64编码的初始向量所附加的，就好像它是一个名为“ iv”的查询参数一样。格式如下：&amp;quot;content&amp;quot;: &amp;quot;&amp;lt;encrypted_text&amp;gt;?iv=&amp;lt;initialization_vector&amp;gt;&amp;quot;.
tags必须包含一个记录可以标识消息的接收方，这样，中继器可以自然地将这一事件转发给他们，格式如下：[&amp;quot;p&amp;quot;, &amp;quot;&amp;lt;pubkey, as a hex string&amp;gt;&amp;quot;]
tags可能包含在之前对话中的消息，或者是我们明确回复的消息，格式如下：[&amp;quot;e&amp;quot;, &amp;quot;&amp;lt;event_id&amp;gt;&amp;quot;]</description>
    </item>
    
    <item>
      <title>详解nostr：nip-03</title>
      <link>https://www.bayesfame.xyz/post/nip-03/</link>
      <pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-03/</guid>
      <description>NIP-03 OpenTimestamps事件认证 当存在 OTS 时，它应该包含在 ots 键下的现有事件主体中:
{ &amp;quot;id&amp;quot;: ..., &amp;quot;kind&amp;quot;: ..., ..., ..., &amp;quot;ots&amp;quot;: &amp;lt;base64-encoded OTS file data&amp;gt; } 事件 id 必须用作 OpenTimestamp merkle 树中包含的原始hash散列。
认证可以由中继器自动提供(OTS 二进制内容附加到接收到的事件中) ，也可以由客户端自己在第一次将事件上传到中继器时提供，并由客户端用来表明事件真的“至少与(OTS 日期)一样古老”。</description>
    </item>
    
    <item>
      <title>详解nostr：nip-02</title>
      <link>https://www.bayesfame.xyz/post/nip-02/</link>
      <pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-02/</guid>
      <description>NIP-02 联系人列表和昵称 具有 kind 3的特殊事件(意思是“联系人列表”)定义为具有一个 p 标记列表，每个 p 标记对应于所关注的/已知的联系人简介。
每个标记条目应该包含联系人简介的键，一个可以找到来自该键的事件的中继器 URL (如果不需要，可以设置为空字符串) ，以及该联系人简介的本地昵称(或“ petname”)(也可以设置为空字符串或不提供) ，即，[“p”，&amp;lt; 32-bytes hex key &amp;gt; ，&amp;lt; main relay URL &amp;gt; ，&amp;lt; petname &amp;gt; ]。content可以是任何内容，应该被忽略。
示例：
{ &amp;quot;kind&amp;quot;: 3, &amp;quot;tags&amp;quot;: [ [&amp;quot;p&amp;quot;, &amp;quot;91cf9..4e5ca&amp;quot;, &amp;quot;wss://alicerelay.com/&amp;quot;, &amp;quot;alice&amp;quot;], [&amp;quot;p&amp;quot;, &amp;quot;14aeb..8dad4&amp;quot;, &amp;quot;wss://bobrelay.com/nostr&amp;quot;, &amp;quot;bob&amp;quot;], [&amp;quot;p&amp;quot;, &amp;quot;612ae..e610f&amp;quot;, &amp;quot;ws://carolrelay.com/ws&amp;quot;, &amp;quot;carol&amp;quot;] ], &amp;quot;content&amp;quot;: &amp;quot;&amp;quot;, ...other fields 每个新的联系人列表在发送时会覆盖之前的，所以这里是全量的数据。中继器和客户端应该在收到联系人列表后删除过去的。
用途 联系人备份 如果用户相信一个中继将存储他们的事件足够的时间，他们可以使用这种kind-3事件备份他们的关注者清单和在不同的设备恢复。
发现联系人和拓展内容 一个客户端可能依赖于 kind-3事件来显示一个被关注的人的名单，根据他正在浏览的个人资料; 根据他可能关注或浏览的其他人的联系人列表来建议关注谁; 或者显示其他上下文中的数据。
分享中继器 一个客户端可能会发布一个完整的联系人列表，并为每个联系人提供良好的中继服务，这样其他客户端就可以根据需要更新他们的内部中继服务列表，从而增强对审查制度的抵抗力。
昵称方案 客户端可以使用这些联系人列表中的数据构造从其他人的联系人列表中派生出来的本地“ petname”表。这减轻了对全局人眼可读名称的需求。例如: 用户有一个内部联系人列表：
[ [&amp;quot;p&amp;quot;, &amp;quot;21df6d143fb96c2ec9d63726bf9edc71&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;erin&amp;quot;] ] 并接收两个联系人列表，其中一个来自21df6d143fb96c2ec9d63726bf9edc71</description>
    </item>
    
    <item>
      <title>详解nostr：nip-01</title>
      <link>https://www.bayesfame.xyz/post/nip-01/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/nip-01/</guid>
      <description>NIP-01 基本的协议描述 这个 NIP 定义了每个人都应该实现的基本协议。新的 NIP 可能会向这里描述的结构和流添加新的可选(或强制)字段、消息和特性。
事件和签名 每个用户有公私钥对，签名，公钥，编码是基于 secp256k1 圆锥曲线实现的 event对象类型的定义如下：
{ &amp;#34;id&amp;#34;: &amp;lt;32-bytes lowercase hex-encoded sha256 of the the serialized event data&amp;gt; &amp;#34;pubkey&amp;#34;: &amp;lt;32-bytes lowercase hex-encoded public key of the event creator&amp;gt;, &amp;#34;created_at&amp;#34;: &amp;lt;unix timestamp in seconds&amp;gt;, &amp;#34;kind&amp;#34;: &amp;lt;integer&amp;gt;, &amp;#34;tags&amp;#34;: [ [&amp;#34;e&amp;#34;, &amp;lt;32-bytes hex of the id of another event&amp;gt;, &amp;lt;recommended relay URL&amp;gt;], [&amp;#34;p&amp;#34;, &amp;lt;32-bytes hex of the key&amp;gt;, &amp;lt;recommended relay URL&amp;gt;], ... // other kinds of tags may be included later  ], &amp;#34;content&amp;#34;: &amp;lt;arbitrary string&amp;gt;, &amp;#34;sig&amp;#34;: &amp;lt;64-bytes signature of the sha256 hash of the serialized event data, which is the same as the &amp;#34;id&amp;#34; field&amp;gt; } 为了获取event中的id，需要对整个event进行序列化并进行sha256编码，序列化的方式是对下面的结构进行utf8格式的json序列化</description>
    </item>
    
    <item>
      <title>读书笔记-被讨厌的勇气</title>
      <link>https://www.bayesfame.xyz/post/reading-note-courage/</link>
      <pubDate>Tue, 24 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/reading-note-courage/</guid>
      <description>第一章 我们的不幸是谁的错 本书一上来就提出“暴论”，在很多平台都看到读者吐槽，也就是本章作者的重点：
不要给自己强加原因 这里主要是让我们抛弃“原因论”，对于当下的个体，如果我们依赖原因论就会止步不前，很多原因其实是我们为了达到目的强加给自己的。
这里举的一个印象深刻的例子是说青年的朋友，整天窝在家里不出门，一出门就心悸手脚发抖，青年及大多数人的想法是他之前一定受过打击，存在心灵创伤，但是哲人却说：他是不想出去才制造出不安的情绪，为了达到不出门的目的而制造出恐惧的情绪，这叫做“目的论”。
不幸往往是自己选择的 从理性的角度分析，哲人的分析是有道理的，我们往往为了逃避而强行制造出理由，以“原因论“的视角来看，我现在的逃避都是因为xxx，所以那该死的xxx！
哲人提倡的阿德勒心理学在我看来是非常积极、非常提倡主观能动性的，他说我们要以目的出发，我们不能停留于对过去的抱怨止步不前，更何况我们的现状与我们所抱怨的往往并无直接联系，而是我们强加的欺骗自己的
 人并不是住在客观的世界，而是住在自己营造的主观世界里。你所看到的世界不同于我看到的世界，而且恐怕是不可能与任何人共有的世界
 第二章 一切烦恼来自人际关系 从第二章开始讨论阿德勒心理学是如何处理人际关系的，哲人一上来就继续提出暴论（建议来中国当小编～) 一切烦恼来自人际关系
青年一上来继续追问哲人，问的每个问题都问到我心坎里去了，简直就是我的心理咨询嘴替～
害怕被否定，害怕心灵受伤，觉得与别人比较自己很糟糕，没有办法喜欢自己&amp;hellip;
这一切都是人际关系所带来的烦恼，当哲人说“这一切都是人际关系所带来的”时，青年激烈的反驳，这里我是很懂青年人的内心的，因为他很畏惧人际关系，他想把上面提出的问题归结于一些其他原因，好让自己好受些，但哲人毫不留情的击中他的软肋，青年没有勇气去面对，此时的下意识反应就是回击和躲避。
自卑感 人们普遍希望进步，树立目标并奋斗，同时对于没有达成的目标就会产生自卑感，这是一种能够促进健康、成长的正向刺激。
这些都是主观上的自卑感而不是劣等性，困扰我们的不是客观的事实而是主观的理解，我们无法改变客观事实却可以改变主观的理解
自卑情结与优越情结 与单纯的自卑感不同，自卑情结是指利用自己的自卑感作为借口使用的状态，例如许多毕业生会说：我无法成功因为我学历低，而实际两者并非有直接的因果关系，社会上对于学历的歧视是存在，但是我们如果靠自卑情结抱着这样的想法，那就不是无法成功，而是“不想成功”
 害怕向前迈进或者是不想真正的努力，不愿意为了改变自我而牺牲目前所享受的乐趣，也拿不出改变生活方式的“勇气”，即使有些不满或者不自由，也更愿意维持现状
 自卑情结还会发展为优越情结，外在表现就是自负，通过向外界传达出虚假的优越感来表现的自己很优秀 还有一种是夸耀不幸，暴露自卑感作为武器来使用，弱势而具有特权，周围的人会小心翼翼的对待，通过这种方式，“我”可以变得很特别，与天下为敌，使自己成为特殊的“存在”
第三章 让干涉你生活的人见鬼去 在前一章哲人分析了几种人际交往之间的情绪，在本章中给出了具体的方法来应对人际关系，那就是“关我屁事” “关你屁事”（摘自豆瓣热评）
正经来说，核心思想就是将人生课题分离开来和追求让别人讨厌的自由
分离人生课题 以亲子教育为例，孩子不爱学习，家长不应该干涉而只给予鼓励，学习成长是孩子自己的人生课题，家长的干涉就是建立纵向关系，是一种控制（用后面段落的总结）
干涉甚至负担起别人的课题会让自己的人生沉重而痛苦，丢开别人的课题，减轻人生负担，开始变简单
让别人讨厌 康德提出“倾向性”，人有非常自然的欲望和冲动，但是按照这种欲望去生活只是欲望和生活的奴隶，真正的自由是一种把滚落下来的自己从下面往上推的态度
我们常困扰于“别人是否讨厌我”，但即使有人不喜欢我，我也不能去干涉，人际关系之卡总是得掌握在自己的手里，我改变了，发生改变的只有“我”，对方怎么样我不知道
 选择了不自由生活方式的大人看着自由活在当先的年轻人就会批判其“享乐主义”，当然这其实是为了让自己接受不自由生活而捏造出的一种人生谎言，选择了真正自由的大人就不会说这样的话，还会鼓励年轻人要勇于争取自由
  可以把马带到水边，但不能强迫其喝水
 第四章 要有被讨厌的勇气 在第三章中高度概括的“关我屁事 关你屁事”原则比较超出大家原有的认知，在这一张，哲人又会将看似冷漠无情的个体通过情感联系起来
探索共同体 显然，青年也无法接受哲人在前一章看似如此无情的人际关系解说，在这里追问。哲人这里依托阿德勒理论提出了共同体概念，在前面的交谈中已经提到过，我们在协作中要把他人当伙伴而不是竞争对手。
人是处在不同的共同体当中的，从学校到家庭到公司、国家、宇宙。共同体感觉是幸福的人际关系的最重要的指标，为提升幸福感需要把对自己的执着变成对他人的关心。
 对自己的执着：人们往往拼命寻求认可，看似是很在意他人评价迎合他人，但最终的落脚点还是自己，是以自我为中心 对他人的关心：我们都不是世界的中心，我们在共同体中的归属感需要靠积极参与进去才能得到，主动迈出一步思考“我能给这个人什么”  我们会同时身处多个共同体，得需要从共同体中跳出来，如果在某个共同体中遇到麻烦，这时候如果认为这个共同体就是一切那样就没有任何归属感，然后躲避到更小的共同体中，这里需要关注的是更多更大的共同体：从宿舍共同体中跳脱出去，从学校环境跳脱出去。
课题分离后的协作 不同人的课题进行分离，但大家又可能会有身处相同的共同体中，在课题分离后的协作关系可以分为纵向关系和横向关系
 纵向关系：常体现于批评和表扬，这都给人一种俯视的语感，是对他人的一种操纵，如果个人自信的根基是基于他人的表扬，那说明是从属于纵向关系，迎合他人的价值观 横向关系：表现就是鼓励，依然践行课题分离的原则不干涉他人，而是基于横向关系的援助。  首先是课题分离，其次是在接受双方差异的同时建立平等的横向关系，“鼓励”是这种原则之上的一种方式。
通过鼓励可以让对方感受到其身处在共同体中的价值，如果我能感受到我对他人有用，不需要他人的评价，我就是有价值的，这一切都是发自我的内心，不依赖外部的评价。
第五章 认真的人活在当下 最后一章可以缓解个人的焦虑，与自己和解。人生是一连串的刹那，人生不是一条线，而是点的连续，我们只能活在“此时此刻”，我们的人生只存在于刹那中。
最重要的就是此时此刻，想象一下在剧场舞台上，强烈的聚光灯打向自己，我们看不到过去和未来，只有被照亮的现在。</description>
    </item>
    
    <item>
      <title>量化交易 Lesson 2 Buy and Hold with a Trailing Stop</title>
      <link>https://www.bayesfame.xyz/post/quant-lesson2/</link>
      <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/quant-lesson2/</guid>
      <description>Lesson 2 Buy and Hold with a Trailing Stop 在上一课中学会了PlaceOrder：self.MarketOrder(&amp;quot;AAPL&amp;quot;, 200) 本节中介绍一些StopOrder的方法
 stop-limit stop-market  StopMarketOrder方法需要指定sell的shares
# Sell 300 units of IBM at or below 95% of the current close price self.StopMarketOrder(&amp;#34;IBM&amp;#34;, -300, 0.95 * self.Securities[&amp;#34;IBM&amp;#34;].Close) 每个order执行后都会触发event，需要在代码中进行监听
# 监听函数 def OnOrderEvent(self, orderEvent): pass orderEvent中包含的属性有：Status和OrderID（唯一） Status包括：
 Submitted：提交 PartiallyFilled：部分成交 Filled：成交 Canceled：取消 Invalid：无效  通过监听event可以得知order的执行状态，通常在执行StopMarketOrder之后一段时间，我们不会立刻进入市场，因此可以通过监听event来得知StopMarketOrder的完成时间来控制下次进入市场的时间
self.stopMarketTicket = self.StopMarketOrder(&amp;#34;SPY&amp;#34;,-500, 0.9*self.Securities[&amp;#34;SPY&amp;#34;].Close) # stopMarketTicket 中包含orderID属性，可以在event中进行匹配 def OnOrderEvent(self, orderEvent): # 判断订单是否已完成 if orderEvent.Status != OrderStatus.Filled: return # Printing the security fill prices.</description>
    </item>
    
    <item>
      <title>量化交易 Lesson 3 Setting Up Tactical Asset Allocation</title>
      <link>https://www.bayesfame.xyz/post/quant-lesson3/</link>
      <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/quant-lesson3/</guid>
      <description>Lesson 3 Setting Up Tactical Asset Allocation 在本节课程中引入了一些专业的金融概念，首先对这些概念进行理解
 Tactical Asset Allocation（TAA） 战术性资产配置 https://wiki.mbalib.com/wiki/Tactical_Asset_Allocation  这是一种积极主动的策略，主动根据市场状态对资产配置进行动态调整 特点：
 一般建立在分析工具的量化分析结果之上 资产配置主要受某资产客观测度驱使，是以价值为导向的过程  Momentum Percentage Indicator 动量百分比指标 动量可以理解为一段时间内股价涨跌变动的比率，更注重变化的速度感，常视为超买超卖的指标  在QuantConnect中定义一个动量指标： self.MOMP(symbol, period, resolution)
在初始化时可以设置self.SetWarmUp()，原文定义的作用是： automatically pumps historical data to an indicator 可以理解为，在初始化的时候预热一段时间的数据并计算赋予指标初始值
通过 MOMP 方法返回的指标有一些实时更新的属性，例如：indicator.Current.Value 可以获取实时的指标数值
假设初始的资产包括 SPY 和BND，并且都分别定义了MOMP指标，现在需要根据指标对两个资产进行操作
#1. If SPY has more upward momentum than BND, then we liquidate our holdings in BND and allocate 100% of our equity to SPY if self.</description>
    </item>
    
    <item>
      <title>量化交易 Lesson 4 Opening Range Breakout</title>
      <link>https://www.bayesfame.xyz/post/quant-lesson4/</link>
      <pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/quant-lesson4/</guid>
      <description>Lesson 4 Opening Range Breakout Opening Range Breakout 即开盘区间突破，ORB策略 在这里给出策略的分析定义（还不是太懂） https://www.jianshu.com/p/a2d7f12cc471
大致理解下，基于开盘价做多头止损和空头止损策略
在这个策略的开始需要：start by consolidating the first 30 minutes of data（合并前30分钟的数据）
定义Consolidators ：将更小的数据点合并到大的区间（是对连续数据按照时间区间进行离散化？）
# Receive consolidated data with a timedelta # parameter and OnDataConsolidated event handler # 参数包括：symbol，时间区间，eventHandler函数 self.Consolidate(&amp;#34;SPY&amp;#34;, timedelta(minutes=45), self.OnDataConsolidated) Consolidators 处理的是将小的数据进行聚合，eventHandler函数用来对聚合后的数据进行处理
Consolidators 返回的bar 分好几个类型，在上述例子中返回的是 TradeBar 类型，包含以下属性：
 Open High Low Close Volume  在QuantConnect中通过SetHoldings方法即可实现Long or Short，正数则为Long，负数为short QC目前不支持同时做多和做空（对冲）
# Go 100% short on SPY  if data[&amp;#34;SPY&amp;#34;].Close &amp;lt; self.openingBar.Low: self.</description>
    </item>
    
    <item>
      <title>量化交易 Lesson 1 Buy And Hold / Equities</title>
      <link>https://www.bayesfame.xyz/post/quant-connect-lesson1/</link>
      <pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/quant-connect-lesson1/</guid>
      <description>Lesson 1 Buy And Hold / Equities # 初始化设置总资本 sets the starting capital for your strategy self.SetCash(25000) # 设置回测的区间范围 self.SetStartDate(2017, 1, 1) self.SetEndDate(2017, 10, 31) 获取资产：self.AddEquity()
这个方法有两个基本的参数：资产名称和数据解析方式
self.AddEquity(&amp;#34;SPY&amp;#34;, Resolution.Minute) 这里的Resolution可以选择Minute, Second, Hour, Daily 但并不一定每个资产都有这么多的数据解析方式，需要参考文档
设置normalization mode，数据的归一化处理方式
 Raw Adjusted SplitAdjusted TotalReturn  self.spy = self.AddEquity(&amp;#34;SPY&amp;#34;, Resolution.Daily,dataNormalizationMode=DataNormalizationMode.Raw) protfolio：记录所有投资标的收益的dictionary
 Invested TotalUnrealizedProfit TotalPortfolioValue TotalMarginUsed  # 查看protfolio，通过self.Portfolio[symbol] self.Debug(&amp;#34;Number of IBM Shares: &amp;#34; + str(self.Portfolio[&amp;#34;IBM&amp;#34;].Invested)) 提出一个市场单 marketOrder，后面跟的参数为asset name和shares
self.MarketOrder(&amp;#34;AAPL&amp;#34;, 200) </description>
    </item>
    
    <item>
      <title>写在2023开始之际</title>
      <link>https://www.bayesfame.xyz/post/write_for_2023/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/write_for_2023/</guid>
      <description>2022年是让我感受到很强割裂感的年份，在这一年里我经历很重要的身份转变，再加上各类新闻、事物绕身，2022不那么完美却也顺利度过了。
站在2023的起点，可以很好将个人学习到的个人管理与规划实践起来，我之前也想过，学生与职场人最大的不同是我能感觉到自己对人生的掌控感更强了。站在一个全新的起点，首先列举下2023年度的OKR和对应的我自己的思考。
2023 OKR O1 成为可靠稳定的工程师 关键结果描述
 从自己的职业基石出发，立足可靠与稳定两点进一步提升个人能力。在已经工作的这半年间，我对技术人员的开发有了一些新的认知，在基架比较成熟、业务模式比较统一的背景下，开发经验究竟用处有多大？ 应届生也可以很快上手，cover基本的业务开发，那么可靠与稳定则是开发人员真正的能力体现。 因此，在此Object中，重点关注常用技术的深度研究、新兴技术的广度探索、线上问题定位与处理的实践能力，更扎实优雅的工程实践能力
 KR1 熟练掌握后端常用组件的运用与基本原理  熟悉组件优劣，能够根据业务情况灵活确定技术方案 深入开发细节，能够掌握各组件在golang下的开发特性 处理问题，通过了解源码能够及时定位和解决遇到的开发问题  KR2 养成个人工程开发实践规范与代码风格  了解架构设计，理解并贯彻诸如微服务架构设计、DDD等设计理念 养成良好的代码编写规范，包括注释、命名及lint、ut等辅助工具 优化开发流程，熟悉快捷键、命令行等操作  KR3 形成个人工作处理SOP  合理进行工作需求排期 及时与领导及协作者反馈、同步进度和风险 学习和实践如何更好的主持会议与参与会议  O2 拓宽认知边界  保持头脑开放、持续学习和探索是我终生的使命 在2023年度，我的重点学习领域在博弈论和经济学领域，再了解一些心理学相关知识辅助认知，在我的理解内，学习博弈论和经济学原理可以从更高的维度理解个人及集体的运作规律，是由个人无意识下的集体选择而非强权逼迫，并希望通过学习探索区块链未来可行的应用方向
 KR1 以博弈论的视角解读世界  深入阅读并理解《博弈与社会》这本书并整理读书笔记与心得 能够将现实生活与案例结合起来，尝试探索更优解  KR2 提升鉴赏力与品味  每周观看一部电影或追一部优秀的剧集（参考豆瓣评分及个人喜好） 每月深入了解一个行业其背后的商业模式  KR3 深入加密货币行业洞察  专注智能合约开发技能，以mev为研究方向 结合博弈论的思考，深入探索加密货币与实体经济的发展方向 每周输出一篇特定领域的思考和研究内容  O3 实践与迭代个人管理  作为对个人管理有一定追求的人，在阅读了一些书籍之后也要确定目标进行实践，尤其面临职场和生活的压力，对于自己的时间、精力以及情绪都要进行管理，不能再放任不管。 因此，本Object目标在于将学习到的方法论应用到个人的时间、精力、情绪管理中
 KR1 优化个人工作流  以GTD为理论，高效处理待办事项（不延期、可追溯、同步风险、高效协作） 管理read later事项，保证对于信息的高效输入，减少信息选择困难  KR2 养成可行的健身习惯  探索更适合自己的高效晨间锻炼方案 保证规律充足的睡眠，学习并实践睡眠方法  KR3 寻找真我保持兴奋  专注待办事项与目标的追踪、复盘，保持目标的新鲜感和饥饿感 与内心的焦虑和解，保持聚焦与专注，在工作和学习过程中都追求心流状态 对于自己的道德保持高标准约束  O4 坚持长期主义  此目标用四象限管理法来看就是：重要但不紧急的事，在《高效能人士的七个习惯》一书看来，这一象限的完成情况才是个人发展最重要的一环。 只有坚持、聚焦、专注，才能实现目标。抛弃对于捷径的追求，慢即是快，专注自我，按照自己的节奏去坚持长期主义，播下一粒种子，在未来收获参天大树。</description>
    </item>
    
    <item>
      <title>database/sql学习笔记</title>
      <link>https://www.bayesfame.xyz/post/database_sql/</link>
      <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/database_sql/</guid>
      <description>golang中的database/sql包提供了非常好的底层抽象设计思想，值得我们深究学习
包的结构中，driver包内主要定义了数据库驱动的接口，而外层的sql文件是对driver接口的封装和功能集成
首先看driver文件，核心的是Driver和Conn接口 由于支持多种类型驱动，在外层的sql文件中用了全局的map来维护所有的驱动接口，并且加了读写锁，对外暴露Register函数
假设某第三方库实现了Driver接口，那么在核心的包内则应通过在init()函数调用sql包的Register函数注册当前实例到其中去 当某用户使用此第三方包时需要显式或隐式的引用此包，确保init函数被执行
// Driver is the interface that must be implemented by a database  // driver.  //  // Database drivers may implement DriverContext for access  // to contexts and to parse the name only once for a pool of connections,  // instead of once per connection.  type Driver interface { // Open returns a new connection to the database.  // The name is a string in a driver-specific format.</description>
    </item>
    
    <item>
      <title>面向汽车3.0的智能演进</title>
      <link>https://www.bayesfame.xyz/post/face-to-car3.0/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/face-to-car3.0/</guid>
      <description> 写在前面：本思维导图整理于观看了李想的演讲视频后，基于ppt及讲话内容的提炼与总结  数字科技的三个重要时代 从电脑到移动互联网再到智能硬件，汽车其实是智能化发展比较滞后的，跳过了第二步，直接进入了智能硬件的时代，但其实（截止到2018年）真正能称得上智能的还只有特斯拉，完整的云服务、账号系统等等。
智能硬件时代真正的核心是以人为核心，那些安装个wifi模块就吹智能硬件的不过是套个壳。无论什么技术、什么产品都是用来解决问题的，最重要的是能向用户提供价值，帮助解决问题，帮助解决潜在的问题。
关于电动化的思考  目前中国电动化的技术储备上与世界处于同一起跑线，甚至处于优势。核心的其实是电池电芯的技术，值得注意的是电池的配方是镍钴锰，而中国是不产钴的，而钴金属近年来的价格也水涨船高 充电桩的普及率是当前电动车市场发展的巨大瓶颈，由于中国的楼宇结构与美国的差异，目前中国的充电桩普及率是非常低的，这也极大的影响了新能源车主的使用体验 汽车的产能和投资不是大的问题，但汽车配套的动力电池的投入是数倍于汽车本身的，随着原材料的价格上涨，动力电池的价格也在不断攀升  关于智能化的思考  不止电动化，车作为一个智能化产品，对于消费者来说需要的是可以不断升级、不断更新，有生命力的产品。大家在手机上使用siri的频率很低，因为他对于我们而言就是冰冷的机器，而在汽车里的语音交互是自然而然的，良好的收音设备，可以给予用户及时的反馈，用户可以感受到有生命力、有感情的产品。 未来的汽车是一个智能化的终端平台，就像手机上承载不同的app一样，在汽车的开放平台之上开发者可以构建应用满足用户的需求，共建开放生态 为什么要选择智能化？一个有力的回答是让你体验过后就回不去了，不再需要在复杂路况中一脚油门一脚刹车，可以停车场自动结账，无论冬夏车内恒温，用智能化的服务说话，用消费者的反馈来回应。  关于自动驾驶的思考  目前的自动驾驶大致分为完全由自己掌控、用指令控制汽车、完全无人驾驶，在将来高级辅助驾驶将会成为中高档汽车的标配 L4级别的无人驾驶将会应用在有限场景，例如物流，园区内的公交线路等等，而非面向消费者的零售车 现在中国的交通运输成本极高，理想在与顺丰合作推出的物流车可以将每公里3-5元的成本降到每公里9毛钱，自动驾驶未来最大的价值就是降低交通运输成本并提高体验  关于汽车制造以及2030年的展望  中国拥有全球最好的汽车供应链以及汽车制造的人才储备 纯电动与混合动力将各占据一半的市场 中国将占据全球智能电动车以及自动驾驶50%以上的份额，并且会出现苹果一样的万亿美金企业  </description>
    </item>
    
    <item>
      <title>蛤蟆先生去看心理医生--心理学入门书籍</title>
      <link>https://www.bayesfame.xyz/post/reading-note-how-to-become-interesting/</link>
      <pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/reading-note-how-to-become-interesting/</guid>
      <description>本书的背景是蛤蟆先生萎靡不振，他的朋友们给他找了一个心理医生，约定好每周进行一次心理咨询，在这里将每次咨询的内容做一个整理。
第一次咨询 咨询师最先问的问题就是：为什么要来心理咨询？是朋友让你来的还是为了自己来的？
我们需要认清的是：心理咨询是一个自发的过程，咨询者与来访者是合作关系，而非完全依赖咨询者
咨询师保证全身心投入，但一切都取决于来访者自己
第二次咨询 你是否能够认识到当前自己真正的“感觉”？
 是什么让你不快乐？，当这些不快乐的事发生时，你处在什么状态下？ 内心委屈、不服气、难过、被羞辱、悲惨、内疚&amp;hellip;&amp;hellip;  我们可以将之称为“儿童心理状态”
第三次咨询 解释“儿童心理状态”：在小时候，我们只有几种简单的情感，随着我们的成长，这些基本情感因人而异，发展成更加复杂的行为模式。因此某些特定的情形和场景会激发我们的行为，让我们像小时候一样去做反应和感受。
我们来梳理下有哪些幼时简单的情感：快乐、愤怒、伤感、恐惧
这些情感构成了“自然型儿童”，当人们进入儿童状态时，他们的感受和行为和小时候如出一辙，与实际年龄无关
伴随着成长，父母会参与儿童的情感形成。在成长过程中的父母，对孩子有绝对的控制权，可以爱、抛弃、虐待等等 婴幼儿会从经验中学习，发展出一套行为来应对父母和其他人。
对于儿童的自我状态，可以分为：“自然型儿童” 和 “适应性儿童”
现在不妨好好回想你的童年经历，让我们进入下次咨询
第四次咨询 回忆中的父亲是什么样的人？严苛、严肃、令人生畏、发怒
作为一个孩子，倘若被一个比自己强大许多倍还无法逃离人欺凌和伤害，他能做什么呢？
学会顺从 代表行为如下：
 取悦：让父母对自己满意，为自己骄傲 道歉：习惯性安抚而道歉 依赖：在弱小无助时依赖着父母，很多人长大后也无法打破  第五次咨询 分析一下自己愤怒，面对父母的愤怒和攻击时，蛤蟆的选择是顺从、取悦、道歉和依赖，看起来没有愤怒的情绪，那么愤怒去哪了？
愤怒是我们的基本情感之一，面对父母，我们学会不带攻击性的发火，使用缓和的方式释放愤怒，让别人察觉不到，就不会让任何人不安，例如无理取闹、怄气。适应性儿童在权威之下无法随心所欲才做出的反应。
第六次咨询 为什么总是遇到类似的事情，让自己显得很蠢，让对方占了上风，让自己变回可怜弱小的自己，这一切是倒霉还是你自己用某种方式与对方共谋了这件倒霉事？
当遇到一个爱说教的人，是不是很容易想起自己的父亲，那样的人正处于“父母自我状态”中
&amp;ldquo;父母自我状态&amp;quot;可以分为“挑剔型”：爱批评、严厉、愤怒
“父母状态”是如何运作的？自我审判、自我批判
第七次咨询 现在感觉自己是“成人状态”，用理性而非情绪化的方式来行事，我们的技能和知识为自己所用，而不再被父母所驱使
当个体只有处于“成人状态”下的时候，才能认识到自我，可以思考当下的事，评估自己的行为
没有人能“让”我们产生什么感受，所有的感受都是我们自己“选择”的，或者说是一种条件反射
第八次咨询 讲述自己从小到大的成长故事
第九次咨询 当我们全面的回顾人生时，我们就能意识到某些人和事是如何在影响着我们，进入成人状态的人可以客观的去看，而不再内疚，慢慢学会理解事情的发生。
我们始终是以自己的角度来看问题，然而每个人的经历是不同的，每个人看到的世界也是不同的。
用一个坐标轴来说明问题，横轴为怎么看待他人：你不好、你好，纵轴为如何看待自己：我好、我不好。在坐标轴的四个象限中出现了四种情况。
一旦我们在童年决定用哪种态度和观点，我们会在后面的人生中坚持自己的选择，形成了“自证预言”。
第十次咨询 在人生坐标中：我不好，你好：代表了一个人的行为态度，觉得生活对自己不好，却善待他人，他们觉得自己是受害者，便会玩那些把他们变成受害者的游戏，来加强自己的观点，形成自证预言。
我好，你不好：对其他人评头论足，占据权威与制高点，攻击与谴责他人
例如，同样遇到打车排队的情况，我不好你好的人会觉得自己很倒霉，怪自己没把时间安排好；我好你不好的人会咒骂出租车司机，对他们大喊大叫
第十一次咨询 从最开始的情绪温度计1-2分到现在的9-10分，蛤蟆先生现在有了很多好转。
如果描述现在的自己，处于我好你也好的象限中，当我们选定这样的态度之后，正是自证预言，我们会用实际行动和态度来践行我好你也好的思想。
理解我们的内心世界，并能掌控它，是真正的高情商人。</description>
    </item>
    
    <item>
      <title>DailyCode-0119</title>
      <link>https://www.bayesfame.xyz/post/leetcode_210119/</link>
      <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/leetcode_210119/</guid>
      <description>删除排序链表中的重复元素  存在一个按升序排列的链表，给你这个链表的头节点 head ，请你删除链表中所有存在数字重复情况的节点，只保留原始链表中 没有重复出现 的数字
 链表删除元素，一定是需要记录指针的next和next.next或双指针，通过改变next指针来完成删除操作。在遍历链表的循环内部还需要一个for循环，来跳过重复的元素，示例如下：
 1 &amp;ndash;&amp;gt; 2 &amp;ndash;&amp;gt; 3 &amp;ndash;&amp;gt; 3 &amp;ndash;&amp;gt; 4 &amp;ndash;&amp;gt; 4 &amp;ndash;&amp;gt; 5
 curr指针指向head的前一个假头指针，判断curr.next(1)与curr.next.next(2)不相等，因此curr向后递推，当curr指向2时，发现next与next.next都为3，需要删除重复元素，因此进入内嵌循环，当curr.val!=3，通过循环后curr指向4，同理4也会跳过，最后指向5，因此最后得到链表：
 1 &amp;ndash;&amp;gt; 2 &amp;ndash;&amp;gt; 5
 tips 在操作链表时，通常需要一个虚拟的假头节点
dummy := ListNode{Next:head} // val不重要，重点在将next指针指向head  ... return dummy.Next 题解 /** * Definition for singly-linked list. * type ListNode struct { * Val int * Next *ListNode * } */ func deleteDuplicates(head *ListNode) *ListNode { if head == nil { return nil } dummy := &amp;amp;ListNode{Next: head} curr := dummy for curr.</description>
    </item>
    
    <item>
      <title>Build KV Engine With Me-01</title>
      <link>https://www.bayesfame.xyz/post/know-about-octopusdb/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/know-about-octopusdb/</guid>
      <description>什么是KV分离，为什么需要KV分离 如何实现KV分离 KV分离带来的难点 OctopusDB是怎么做的 </description>
    </item>
    
    <item>
      <title>学会表达</title>
      <link>https://www.bayesfame.xyz/post/how-to-express/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/how-to-express/</guid>
      <description>How to express 我一直认为无法清楚表达自己的想法是一个弱点。
我常常就是脑袋里想法很多，但是到要说出来，发表出来的时候就很一时语塞，不知如何组织语言，觉得只言片语无法清楚的阐述内心想法，话一多又觉得扯得太远，偏离核心。
其实在 2020 年刚开始实习的时候，在 leader 的推荐下阅读了《金字塔理论》，读过的书就是水一样流逝，如今令我记忆深刻的点也只剩下：说话先说结论，分点陈述（这个点也缺少上下文，或许有失偏颇）。这本书值得再读，尤其在正式进去工作之后。
 知乎回答 如何表达？ 分块解决 （Divide and Conquer）和逻辑链 ( Chain )
 简而言之：先分块，再对每一块分点阐述。整个逻辑思维是比较简单的，重点就是在日常生活中锻炼自己的语言组织表达能力。
 先说论点，再说逻辑：对于听者/读者而言，是带着论点去读逻辑，是一种主动参与论证的过程 每次要把想法表达出来时：按照固定的格式在心里梳理一遍   结论：XXX; 理由：原因1：; 原因2：; ……; 原因N：
 总结  先说论点，再分块，分点阐述 形成：结论--&amp;gt;原因 的思维格式 再好好读下《金字塔理论》  </description>
    </item>
    
    <item>
      <title>经济学原理-01</title>
      <link>https://www.bayesfame.xyz/post/economic-theory/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/economic-theory/</guid>
      <description>经济学的三类问题  这三类问题涵盖了由微观到宏观经济学
  人们如何做决策 How People Make Decisions 人们如何相互作用 How People Interact 整体经济如何运行 How the Economy as a Whole Works  人们如何做决策  权衡 tradeoffs  看问题不是单点，多视角权衡   成本 cost  某物的成本是为此放弃的东西，区别于直接的生产成本   边际 margin  细小的变化引起的变化   激励 incentives  人们对激励做出反应    人们如何相互作用  交易 trade  交易使得双方受益   市场 market  市场通常是组织经济的好方式，“invisble hand”   政府 government  政府可以改进市场    整体经济如何运行  生产 production  由生产率衡量，高生产率&amp;ndash;&amp;gt;高生产水平   货币 money 通胀与失业 inflation and unemployment  经济中整体物价水平的上升    </description>
    </item>
    
    <item>
      <title>Dapr学习笔记</title>
      <link>https://www.bayesfame.xyz/post/dapr/</link>
      <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/dapr/</guid>
      <description>Dapr学习笔记 首先将从dapr的整体架构入手，再逐个模块进行深入源码的分析，一起深入Runtime的世界！</description>
    </item>
    
    <item>
      <title>TinyKV Project-1</title>
      <link>https://www.bayesfame.xyz/post/tinykv/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/tinykv/</guid>
      <description></description>
    </item>
    
    <item>
      <title>日常-方法论</title>
      <link>https://www.bayesfame.xyz/post/methodlogy/</link>
      <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/methodlogy/</guid>
      <description>Less is More.
 由于信息来源众多，市面上也有诸多 Best Practice ，在此记录一下我日常生活中认为有效、将持续践行的一些方法论
1. 信息源的输入 信息源的统一入口可以分为：
Flomo：记录零碎的idea，待办
Cubox：长文本、各平台文章汇总的收藏夹
2. 日程处理 养成习惯一定是非常困难且反人类的，在前期需要使用强提醒来管理自己
滴答清单：TODO待办事项汇总
3. 知识输出 飞书文档：有体系的总结、笔记等知识
博客：基于文档的知识的汇总与归纳</description>
    </item>
    
    <item>
      <title>走入分布式系统</title>
      <link>https://www.bayesfame.xyz/post/distributed_system/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/distributed_system/</guid>
      <description>对于分布式的认识 大二暑假开始实习，接触到工业级的开发，摆脱了学校里vc6.0的黑框框。 从开始做服务的接口开发，到数据模型的设计，业务架构的设计。接触更多的业务层面的开发，对我而言是一个自顶向下的发展方向，后期也逐步学习了存储、RPC、消息队列等中间件。
综合考虑业务体量与实际需求，并没有过早涉及到分布式，记得在看MIT 6.824的课程时，老师就曾说过：能不要分布式就不要分布式（:&amp;gt;可能是类似的意思）
在我的理解里，分布式系统中重要的影响因素有：
 可靠性：网络是否可靠，调用是否超时，数据是否丢失 一致性：多节点之间如何保证一致性，强一致性，最终一致性？  与传统的单机架构相比，一旦涉及到更多的状态可能性，考虑更多的因素，开发难度一定会陡然增加
发展方向与目标 伴随业务发展，需要对现有架构做升级
 master：基于etcd做元数据管理与资源调度中心 proxy：兼容现有的各种API，做统一化管理 partition：分布式KV存储  参考的项目：
 vearch 分布式向量检索系统，参考架构设计 elasticsearch 检索引擎 baikaldb 分布式数据库 tao 图存储实现  </description>
    </item>
    
    <item>
      <title>Leetcode-3 无重复字符最长字串</title>
      <link>https://www.bayesfame.xyz/post/leetcode_3/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/leetcode_3/</guid>
      <description>无重复字符最长子串  给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度
 示例
 输入: s = &amp;ldquo;abcabcbb&amp;rdquo; 输出: 3 解释: 因为无重复字符的最长子串是 &amp;ldquo;abc&amp;rdquo;，所以其长度为 3。
 滑动窗口题目的模板 根据模板，可以看出滑动窗口可分为向右扩大窗口，和从左边缩小窗口
left,right :=0,0 for right &amp;lt; len(str){ // 向右扩大窗口  window[str[right]]++ right++ // 从左边起缩小窗口  for window need shrink { delete(window, str[left]) left++ } } 思路 使用左右指针控制子串边界，检验是否有重复元素可通过map来实现，关键点是当发现重复元素时，左右指针该如何移动
测试用例
 abcabcbb
  当 left=0,right=2 时，子串为 abc 满足无重复条件 right 再向后移动，遇到元素 a，通过map的校验可以发现出现重复元素 此时 left 需要移动，终止条件就是[left,right]区间内无重复元素，而可能的重复元素就是right所指向的元素  因此可以写出窗口收缩的部分代码
// rightChar: right指针所指向的元素，当前窗口内的重复元素  // 窗口收缩代码  for window[rightChar]&amp;gt;1{ leftChar := s[left] window[leftChar]-- left++ } 题解 LeetCode-3</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://www.bayesfame.xyz/post/markdown-syntax/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://www.bayesfame.xyz/post/rich-content/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://www.bayesfame.xyz/post/math-typesetting/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.bayesfame.xyz/post/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
