<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>concurrent on ZachBlog</title>
    <link>http://zachless.design/tags/concurrent/</link>
    <description>Recent content in concurrent on ZachBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ch</language>
    <copyright>Copyright © 2008–2019, Steve Francia and the lee.so; all rights reserved.</copyright>
    <lastBuildDate>Thu, 14 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://zachless.design/tags/concurrent/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>并发编程挑战--多线程交替打印</title>
      <link>http://zachless.design/post/concurrent_code/</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://zachless.design/post/concurrent_code/</guid>
      <description>多线程交替打印 题目: 多线程面试题
热身 面试OceanBase的时候，出了一道算法题，两个线程交替打印1-100 使用go来解决此问题，使用两个go协程，
func concurrentPrint() { even, odd := make(chan struct{}, 1), make(chan struct{}, 1) even &amp;lt;- struct{}{} count := 1 var wg sync.WaitGroup go func() { wg.Add(1) for count &amp;lt;= 99 { select { case &amp;lt;-even: fmt.Println(&amp;#34;t-1: &amp;#34;, count) count++ odd &amp;lt;- struct{}{} } } wg.Done() }() go func() { wg.Add(1) for count &amp;lt;= 100 { select { case &amp;lt;-odd: fmt.Println(&amp;#34;t-2: &amp;#34;, count) count++ even &amp;lt;- struct{}{} } } wg.</description>
    </item>
    
  </channel>
</rss>
